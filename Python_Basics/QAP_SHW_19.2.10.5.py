# Условие: В финальном практическом задании вам предстоит поработать с системой, которая обрабатывает
# структурированные данные. Одной из структур является иерархическая категоризация продуктов для интернет-магазина.
# Каждая категория может содержать подкатегории и так далее. Вам нужно написать функцию, которая принимает
# иерархический словарь категорий и возвращает полный путь каждой подкатегории в виде строки.
# Ваша задача заключается в реализации функции category_dict, которая принимает словарь и parent_path-строку
# (по умолчанию пустая строка) и возвращает список из всех путей следующего вида (вспомните о рекурсии):
# paths = extract_categories(categories, parent_path='root')
# for path in paths:
#   print(path)

# root > Электроника
# root > Электроника > Телефоны
# root > Электроника > Телефоны > Смартфоны
# root > Электроника > Телефоны > Проводные
# root > Электроника > Компьютеры
# root > Электроника > Компьютеры > Ноутбуки
# root > Электроника > Компьютеры > Стационарные
# root > Электроника > Компьютеры > Стационарные > Игровые
# root > Электроника > Компьютеры > Стационарные > Для работы
# root > Одежда
# root > Одежда > Мужская
# root > Одежда > Мужская > Джинсы
# root > Одежда > Мужская > Куртки

# И если не передавать parent_path:
# paths = extract_categories(categories)
# for path in paths:
#    print(path)

# Электроника
#  > Телефоны
# Электроника > Телефоны > Смартфоны
# ...
# Одежда > Мужская
# Одежда > Мужская > Джинсы
# Одежда > Мужская > Куртки

def extract_categories(category_dict, parent_path=''):
   paths = []
   for category, subcategories in category_dict.items():
       current_path = f"{parent_path} > {category}" if parent_path else category
       paths.append(current_path)
       paths.extend(extract_categories(subcategories, current_path))
   return paths